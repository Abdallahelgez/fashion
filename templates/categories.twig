{% extends "layout.twig" %}

{% block header %} {{ include('header.twig') }} {% endblock %}


{% block top_links %}
    <link rel="stylesheet" href="{{ asset_url ~ 'category-style.css?v=1.13' }}">
{% endblock %}

{% block main_content %}

    <section class="breadcrumb-section">
        <nav aria-label="breadcrumb">
        
            <ol class="breadcrumb">
            <div class="container-sec d-flex flex-wrap">
                <li class="breadcrumb-item active " aria-current="page">{{ locals.header_all_categories }}</li>
            </div>
        
            </ol>
    
        </nav>
    </section>

    <div class="container-SEC mb-5">
        <div class="row categories-page">
            {% for key, category in categories %}
                <div class="cat-col category-item col-lg-3 col-md-4 col-sm-6" >

							<a class="category-ancor" href="/categories/{{ category.id }}/{{ category.slug }}">

								<div class="img-parent" style="{% if category.image %} background-image:url({{category.image}}); {% else %} background-color: #cccccc; {% endif %}">

								    <h2>{{category.name}}</h2>
                                </div>
								
							</a>

			    </div>
            {% endfor %}
        </div>
    </div>

{% endblock %}

{% block footer_scripts %}
    <script src="{{ asset_url ~ 'masonry.pkgd.min.js' }}"></script>
    <script>

        // Initial resize in window.load as the content in each item may contain images
        document.addEventListener("DOMContentLoaded", function(){
            var container = document.querySelector('.categories-row');
            var msnry = new Masonry(container, {
                itemSelector: '.all-cat-col'
            });
        });
   document.addEventListener('DOMContentLoaded', () => {
						const filterItems = document.querySelectorAll('.filter-item');
						const productsList = document.getElementById('products-list');
					
						filterItems.forEach(item => {
							item.addEventListener('click', () => {
								// Remove active class from all filter items
								filterItems.forEach(i => i.classList.remove('active'));
					
								// Add active class to the clicked item
								item.classList.add('active');
					
								// Remove grid-fill and list-fill classes from products list
								productsList.classList.remove('grid-fill', 'list-fill');
					
								// Add the appropriate class based on the clicked item
								if (item.classList.contains('grid-fill')) {
									productsList.classList.add('grid-fill');
								} else if (item.classList.contains('list-fill')) {
									productsList.classList.add('list-fill');
								}
							});
						});
			    });
if (window.innerWidth < 500) {
         const productsList = document.getElementById('products-list');
		  productsList.classList.remove('grid-fill', 'list-fill');
    }
    </script>
{% endblock %}


{% block footer %} {{ include('footer.twig') }} {% endblock %}
